plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.2-SNAPSHOT'
springBoot {
    buildInfo() // generates META-INF/build-info.properties (BuildProperties bean)
}
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    maven {
        url = uri('https://maven.pkg.github.com/ngiyulu/run_it_up_model')
        credentials {
            username = findProperty('gpr.user') ?: System.getenv('GPR_USER')
            password = findProperty('gpr.key') ?: System.getenv('GPR_TOKEN')
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.twilio.sdk:twilio:8.31.1'
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation 'com.stripe:stripe-java:22.18.0'
    implementation 'com.sendgrid:sendgrid-java:4.10.0'
    implementation "com.github.loki4j:loki-logback-appender:1.4.0"
    implementation 'net.logstash.logback:logstash-logback-encoder:7.2'
    implementation "com.google.firebase:firebase-admin:9.4.2"
    implementation("org.springframework.boot:spring-boot-starter-data-mongodb")
    implementation("org.springframework.boot:spring-boot-starter-cache")
    implementation("org.springframework.boot:spring-boot-starter-data-redis")
    implementation("com.fasterxml.jackson.core:jackson-databind")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    implementation("com.ngiyulu:runitup-models:1.0.12")
    // Image resize/compress
    implementation("net.coobird:thumbnailator:0.4.20")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    implementation("org.springframework.boot:spring-boot-starter")
    // optional: for HTML escaping utilities, etc.
    implementation("org.apache.commons:commons-text:1.11.0")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    // Optional: direct APNs (Pushy)
    implementation("com.eatthepath:pushy:0.15.4")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.9.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-slf4j:1.9.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.9.0")
    implementation("org.springframework.retry:spring-retry")
    implementation("org.springframework.boot:spring-boot-starter-aop")
    implementation("org.springframework.boot:spring-boot-starter-webflux") // WebClient
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.8.9")
    implementation("org.jetbrains.kotlin:kotlin-reflect")


    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.8.1")
    // OPTIONAL if you ever use `.toMono()` / other Kotlin Reactor helpers:
    implementation("io.projectreactor.kotlin:reactor-kotlin-extensions:1.2.2")



//    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    testImplementation 'org.springframework.boot:spring-boot-starter-test' // no need to exclude

    // Mockito
    testImplementation 'org.mockito:mockito-core:5.12.0'
    testImplementation 'org.mockito:mockito-inline:5.2.0'        // for static/final/object mocking
    testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0' // if you use JUnit 5
    // If you write tests in Kotlin:
    testImplementation 'org.mockito.kotlin:mockito-kotlin:5.3.1'
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
